Домашнее задание 5. Реляционная алгебра
Структура базы данных «Университет»:

Students(StudentId, StudentName, GroupId)
Groups(GroupId, GroupName)
Courses(CourseId, CourseName)
Lecturers(LecturerId, LecturerName)
Plan(GroupId, CourseId, LecturerId)
Marks(StudentId, CourseId, Mark)
Составьте выражения реляционной алгебры и соответствующие SQL-запросы, позволяющие получать

Информацию о студентах
С заданным идентификатором (StudentId, StudentName, GroupId по :StudentId).
С заданным ФИО (StudentId, StudentName, GroupId по :StudentName).
Полную информацию о студентах
С заданным идентификатором (StudentId, StudentName, GroupName по :StudentId).
С заданным ФИО (StudentId, StudentName, GroupName по :StudentName).
Информацию о студентах с заданной оценкой по дисциплине
С заданным идентификатором (StudentId, StudentName, GroupId по :Mark, :CourseId).
С заданным названием (StudentId, StudentName, GroupId по :Mark, :CourseName).
Которую у них вёл лектор заданный идентификатором (StudentId, StudentName, GroupId по :Mark, :LecturerId).
Которую у них вёл лектор, заданный ФИО (StudentId, StudentName, GroupId по :Mark, :LecturerName).
Которую вёл лектор, заданный идентификатором (StudentId, StudentName, GroupId по :Mark, :LecturerId).
Которую вёл лектор, заданный ФИО (StudentId, StudentName, GroupId по :Mark, :LecturerName).
Информацию о студентах не имеющих оценки по дисциплине
Среди всех студентов (StudentId, StudentName, GroupId по :CourseName).
Среди студентов, у которых есть эта дисциплина (StudentId, StudentName, GroupId по :CourseName).
Для каждого студента ФИО и названия дисциплин
Которые у него есть по плану (StudentName, CourseName).
Есть, но у него нет оценки (StudentName, CourseName).
Есть, но у него не 4 или 5 (StudentName, CourseName).
Идентификаторы студентов по преподавателю
Имеющих хотя бы одну оценку у преподавателя (StudentId по :LecturerName).
Не имеющих ни одной оценки у преподавателя (StudentId по :LecturerName).
Имеющих оценки по всем дисциплинам преподавателя (StudentId по :LecturerName).
Имеющих оценки по всем дисциплинам преподавателя, которые он вёл у этого студента (StudentId по :LecturerName).
Группы и дисциплины, такие что все студенты группы имеют оценку по этой дисциплине
Идентификаторы (GroupId, CourseId).
Названия (GroupName, CourseName).
Составьте SQL-запросы, позволяющие получать

Суммарный балл
Одного студента (SumMark по :StudentId).
Каждого студента (StudentName, SumMark).
Каждой группы (GroupName, SumMark).
Средний балл
Одного студента (AvgMark по :StudentId).
Каждого студента (StudentName, AvgMark).
Каждой группы (GroupName, AvgMark).
Средний балл средних баллов студентов каждой группы (GroupName, AvgAvgMark).
Для каждого студента: число дисциплин, которые у него были, число сданных дисциплин и число несданных дисциплин (StudentId, Total, Passed, Failed).